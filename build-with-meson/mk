#! /bin/bash

BUILD_DEFAULT_DIR=build
BUILD_DEBUG_DIR=build.debug

# ----------------------------------------------------------------------

build_default()
{
    trap 'fail "build failed"' ERR
    if [[ ! -d "${BUILD_DEFAULT_DIR}" ]]; then
        find_compiler
        meson setup "${BUILD_DEFAULT_DIR}" -Ddebug=true -Doptimization=3
        # --buildtype debugoptimized
        # -Dcpp_args=-O3
    fi
    ${MK_TIME} meson compile -C "${BUILD_DEFAULT_DIR}"
}

# ----------------------------------------------------------------------

build_debug()
{
    trap 'fail "build failed"' ERR
    if [[ ! -d "${BUILD_DEBUG_DIR}" ]]; then
        find_compiler
        meson setup "${BUILD_DEBUG_DIR}"  -Ddebug=true -Doptimization=g -Db_sanitize=address
    fi
    ${MK_TIME} meson compile -C "${BUILD_DEBUG_DIR}"
}

# ----------------------------------------------------------------------

find_compiler()
{
    case $(uname) in
        Darwin)
            export CXX=/usr/local/opt/llvm/bin/clang++
            MK_TIME=gtime
            ;;
        Linux)
            export CXX=g++-11
            MK_TIME=time
            ;;
        *)
            fail "Unsupported platform: $(name)"
    esac
    if [[ ! -x "${CXX}" ]]; then
        fail "Compiler not found: ${CXX}"
    fi
}

# ----------------------------------------------------------------------

clean()
{
    remove "${BUILD_DEFAULT_DIR}" "${BUILD_DEBUG_DIR}"
    for fn in $(cat subprojects/.gitignore); do
        remove subprojects/${fn}
    done
}

# ----------------------------------------------------------------------

remove()
{
    echo "rm -rf $@"
    rm -rf "$@"
}

# ----------------------------------------------------------------------

fail()
{
    echo "> ERROR: $@" >&2
    exit 1
}

# ----------------------------------------------------------------------

trap 'fail "build failed"' ERR
cd "$(dirname $0)"
case "$1" in
    clean)
        clean
        ;;
    debug)
        build_debug
        ;;
    -h)
        fail "Usage: $0 [-h] [clean] [debug]"
        ;;
    *)
        build_default
esac
